plugins {
    id 'java'
    id 'groovy'
    id 'java-library' // For using "api"; https://jongmin92.github.io/2019/05/09/Gradle/gradle-api-vs-implementation
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    group = 'co.oneplat.teamkeeper'
    version = '0.1.0'

    apply(plugin: 'java')
    apply(plugin: 'groovy')
    apply(plugin: 'java-library')
    apply(plugin: 'org.springframework.boot')
    apply(plugin: 'io.spring.dependency-management')

    repositories {
        mavenCentral()
        mavenLocal()
    }

    jar {
        enabled = false
    }
}

configure(subprojects) {
    dependencyManagement {
    }

    dependencies {
        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        //        testImplementation 'org.springframework.security:spring-security-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-parameters'
    }

    tasks.withType(GroovyCompile).configureEach {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-parameters'
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }

    bootJar {
        enabled = true
        archiveBaseName = "$rootProject.name-$project.name"
        archiveVersion = "$project.version"
    }
}

wrapper {
    gradleVersion = '8.10.2'
    distributionType = Wrapper.DistributionType.BIN
}

bootJar {
    enabled = false
}
