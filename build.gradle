plugins {
    id 'java'
    id 'groovy'
    id 'java-library' // For using 'api': https://jongmin92.github.io/2019/05/09/Gradle/gradle-api-vs-implementation
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    group = 'co.oneplat.teamkeeper'
    version = '0.1.0'

    apply(plugin: 'java')
    apply(plugin: 'groovy')
    apply(plugin: 'java-library')
    apply(plugin: 'org.springframework.boot')
    apply(plugin: 'io.spring.dependency-management')

    repositories {
        mavenCentral()
        mavenLocal()
    }
}

configure(subprojects) {
    final def isLibraryProject = project.name.startsWith('library.')
    final def isRunnableProject = !isLibraryProject && Boolean.parseBoolean(project.property('project.runnable').toString())

    dependencyManagement {
        dependencies {
            // Embedded redis.
            dependency 'it.ozimov:embedded-redis:0.7.3'

            // DataSource proxy for logging JPA parameters.
            dependency 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.2'

            // Jetbrains annotation for compatibility with kotlin.
            dependency 'org.jetbrains:annotations:26.0.0'

            // Spockframework with groovy.
            dependency 'org.spockframework:spock-core:2.3-groovy-4.0'
            dependency 'org.spockframework:spock-spring:2.3-groovy-4.0'
            dependency 'net.bytebuddy:byte-buddy:1.15.4'
        }
    }

    dependencies {
        // Modules and libraries ---------------------------------------------------------------------------

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        compileOnly 'org.jetbrains:annotations'

        testImplementation 'org.spockframework:spock-core'
        testImplementation 'net.bytebuddy:byte-buddy'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        if (isLibraryProject) {
            return
        }

        // Modules -----------------------------------------------------------------------------------------

        implementation 'org.springframework.boot:spring-boot-starter'
        implementation('org.springframework.boot:spring-boot-starter-web') {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        }
        implementation 'org.springframework.boot:spring-boot-starter-undertow'

        // Redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation project(':library.embedded-redis')

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.spockframework:spock-spring'

        if (!isRunnableProject) {
            return
        }

        // Runnable modules --------------------------------------------------------------------------------

        // Query DSL: http://honeymon.io/tech/2020/07/09/gradle-annotation-processor-with-querydsl.html
        implementation "com.querydsl:querydsl-jpa:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

        // Uses H2 database on local environment.
        runtimeOnly 'com.h2database:h2'
        // Uses MariaDB database on AWS cloud environment.
        runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

        testImplementation project(':module.tester')
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-parameters'
    }

    tasks.withType(GroovyCompile).configureEach {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-parameters'
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }

    // Enables subprojects to build plain jar file; It needed to refer to other modules on another module.
    // See https://github.com/HomoEfficio/dev-tips/blob/master/Gradle-error-package-does-not-exist.md
    jar {
        enabled = true
    }

    bootJar {
        enabled = isRunnableProject
        archiveBaseName = "$rootProject.name-$project.name"
        archiveVersion = "$project.version"
    }
}

wrapper {
    gradleVersion = '8.10.2'
    distributionType = Wrapper.DistributionType.BIN
}

jar {
    enabled = false
}

bootJar {
    enabled = false
}
